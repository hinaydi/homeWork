# Освоить создание функций с параметрами по умолчанию
# и практику вызова этих функций с различным количеством аргументов.

# Задача "Распаковка":
print('_____________________________________')
print('1. Функция с параметрами по умолчанию: \n')


# Создайте функцию print_params(a = 1, b = 'строка', c = True)
def print_params(a=1, b='строка', c=True):
    print(a, b, c)  # вывести эти параметры


# Вызовите функцию print_params с разным количеством аргументов, включая вызов без аргументов

print_params()  # вызов функции без аргументов

print_params(25, True, 'str')  # вызов функции с разным количествам аргументов
print_params('abc')
print_params(a=5, c='five')

print_params(b=25)  # проверить работают ли вызовы
print_params(c=[1, 2, 3])

print('_____________________________________')
print('2. Распаковка параметров: \n')

# Создайте список values_list с тремя элементами разных типов
values_list = [555, 'Msk', False]

'''Создайте словарь values_dict с тремя ключами, соответствующими параметрам 
функции print_params, и значениями разных типов'''
values_dict = {'a': 1, 'b': 'строка', 'c': 8.6}

'''
Передайте values_list и values_dict в функцию print_params,
используя распаковку параметров (* для списка и ** для словаря)'''
print_params(*values_list)
print_params(**values_dict)

print('_____________________________________')
print('3. Распаковка + отдельные параметры:\n')

# Создайте список values_list_2 с двумя элементами разных типов
values_list_2 = [234.5, 'hi']

# Проверьте, работает ли print_params(*values_list_2, 42)
print_params(*values_list_2, 42)
